// Гоночная трас­са состоит из двух ос­нов­ных дорог и не­сколь­ких переездов, поз­во­ля­ю­щих перейти с одной до­ро­ги на другую. На всех участках, вклю­чая переезды, дви­же­ние разрешено толь­ко в одну сторону, по­это­му переезд воз­мо­жен только с до­ро­ги A на до­ро­гу B. Гон­щик стартует в точке A0 и дол­жен финишировать в точке BN. Он знает, за какое время смо­жет пройти каж­дый участок пути по каж­дой дороге, то есть время про­хож­де­ния участков A0A1, A1A2, …, AN-1AN, B0B1, B1B2, …, BN-1BN. Время про­хож­де­ния всех пе­ре­ез­дов A0B0, A1B1, …, ANBN оди­на­ко­во и из­вест­но гонщику. Не­об­хо­ди­мо определить, за какое ми­ни­маль­ное время гон­щик сможет прой­ти трассу.
#include <iostream>
using  namespace std;
int main(){
    int n,t;
    cout << "Enter the number of roads: ";
    cin >> n;
    cout << endl << "Enter the time of every road: ";
    cin >> t;
    int a,b;
    int x=0;
    int y=0;
    int ss=0;
    int s=0;
    for (int i=0;i<n;i++){
            cout << endl << "Enter the time of A" << i+1 << "A" << i+1 << "and B" << i+1 << "B" << i+1 << ": ";
            cin >> a >> b;
            x=x+a;
            y=y+b;
            ss=x+t;
            if (y<ss) s=y;
            else y=ss;
    }
cout<<"Minimum time is " << s;
return 0;
}
